@using System.Globalization
@model inventoryAppWebUi.Models.ProductViewModel

<head>
    @Styles.Render("~/Content/template/css")
    @Scripts.Render("~/bundles/modernizr")
</head>

<div id="quill-toolbar1">
    @using (Ajax.BeginForm("SaveProduct", "Product", null, new AjaxOptions
    {
        OnSuccess = "OnSuccess",
        OnFailure = "OnFailure"
    }, new { @class = "form-horizontal", id = "form", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-sm-12">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control textbox", PlaceHolder = "Product Name" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="form-row col-sm-12">
                <div class="col-sm-6">
                    @Html.LabelFor(m => m.TotalUnitPerProducts)
                    @Html.EditorFor(model => model.TotalUnitPerProducts, new { htmlAttributes = new { @class = "form-control textbox", min = "1" } })
                    @Html.ValidationMessageFor(model => model.TotalUnitPerProducts, "", new { @class = "text-danger" })

                    @*<input min="1" id="NumPerCard" type="number" class="form-control textbox" placeholder="Units per Product" />*@
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(m => m.PricePerUnit)
                    @Html.EditorFor(model => model.PricePerUnit, new { htmlAttributes = new { @class = "form-control textbox", min = "1" } })
                    @Html.ValidationMessageFor(model => model.PricePerUnit, "", new { @class = "text-danger" })


                    @*<label for="pricePerTablet">Price per unit</label>
        <input min="1" id="pricePerTablet" type="number" class="form-control textbox" placeholder="Price per unit" /> *@
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <label>Quantity Supplied</label>
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control textbox", PlaceHolder = "Quantity" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <span>@NumberFormatInfo.CurrentInfo.CurrencySymbol</span>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control textbox", PlaceHolder = "Price", value = "(@Model.PricePerUnit * Model.TotalUnitPerProducts)" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                @Html.LabelFor(m => m.ExpiryDate)
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.ExpiryDate != null ? Model.ExpiryDate.Date.ToString("{0:d MMM yyyy}") : null } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                @Html.EditorFor(model => model.SupplierTag, new { htmlAttributes = new { @class = "form-control textbox", PlaceHolder = "Tag number" } })
                @Html.ValidationMessageFor(model => model.SupplierTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                @Html.Label("ProductCategory", "Product Category")

                @Html.DropDownListFor(model => model.ProductCategoryId, new SelectList(Model.ProductCategory, "id", "CategoryName"), "Select Category", new { @class = "form-control textbox" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <input id="formBtn" type="submit" value="Add Product" class="btn btn-primary col-sm-12" />
            </div>
        </div>
        @Html.HiddenFor(model => model.Id)

    }
</div>
